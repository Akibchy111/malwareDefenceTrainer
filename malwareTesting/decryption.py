# Decryption Program - prompts user for file that ends with ".crypt" and if found,
# decrypts the file using the file key in the current working directory. 
#
#
# By Team 16
# 
#
########################

import os
import shutil

from cryptography.fernet import Fernet


cwd_path = os.getcwd() + '//' # Get CWD path


# Function that decrypts input file using key generated from encryption.py

def decrypt_file(test_file):
 
    with open('filekey.key', 'rb') as file_key:
        key = file_key.read()

    fernet = Fernet(key)

    with open(test_file, 'rb') as file:
        original = file.read()

    decrypted = fernet.decrypt(original)

    with open(test_file, 'wb') as decrypted_file:
        decrypted_file.write(decrypted)



def change_ext(file):

    dest_file = cwd_path + file.replace('crypt', 'open') 

    shutil.move(cwd_path + file, dest_file ) 

    return dest_file





# Prints borders for terminal UI

def print_border(): 
    print("#####################################\n")


# User Interface

print("Welcome to the file decryption program.\n") 

print_border()

print("Here is your directory path: ", end=' ') 

print(cwd_path) # Get CWD

print()

print_border()

print("Here is a list of encrypted files in your directory:\n")

for file in os.listdir(): # Get all files in CWD
    if file[-6:] == '.crypt':
        print(file)

print_border()

file_name = input("\nPlease enter a file to decrypt: ")


# Checks whether encrypted file is in directory, attempts to decrypt

if (file_name in os.listdir()) and (file_name[-6:] == '.crypt'):
    print("This is a valid encrypted file in your current working directory\n")
    print("Attempting to decrypt now...") 

    # Check if file key is in CWD

    if "filekey.key" in os.listdir():
        print("Key found in current working directory.\nProceeding with decryption...\n") 

        test_file = change_ext(file_name)

        decrypt_file(test_file)

        print("Congratulations! We have decrypted your file. You can check the file")
        print("{file}.open to see if it matches your original file.".format(file = file_name))

    else:
        print("There is no key located in your directory. We are unable to decrypt your file...")

else:
    print("This is not a valid file that can be decrypted.\n")

print("Exiting program...")
