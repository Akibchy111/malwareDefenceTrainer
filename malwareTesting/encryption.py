# Encryption Program - prompts user for a file in directory, checks if file is valid
# and then creates an encrypted version of the file.
#
#
# By Team 16
# 
#
########################

import os
import shutil

from cryptography.fernet import Fernet


#files = [] 

cwd_path = os.getcwd() + '//' # Get CWD path

# Generates and saves a key for encryption

key = Fernet.generate_key()

with open('filekey.key', 'wb') as file_key:
    file_key.write(key)

# Prints borders for terminal UI

def print_border(): 
    print("#####################################\n")

# Function that makes a copy of input file

def make_copy(file):

    dest_file = cwd_path + file + ".crypt" 

    shutil.copyfile(cwd_path + file, dest_file ) 

    print("File has been created. ")

    return dest_file


# Function that encrypts input file using key generated earlier

def encrypt_file(test_file):

    
    with open('filekey.key', 'rb') as file_key:
        key = file_key.read()

    fernet = Fernet(key)

    with open(test_file, 'rb') as file:
        original = file.read()

    encrypted = fernet.encrypt(original)

    with open(test_file, 'wb') as encrypted_file:
        encrypted_file.write(encrypted)


# User Interface

print("Welcome to the file encryption program.") 
print_border()

print("Here is your directory path: ", end=' ') 

print(cwd_path) # Get CWD

print_border()

print("Here is a list of files in your directory:\n")

for file in os.listdir(): # Get all files in CWD
    print(file)

print_border()

file_name = input("\nPlease enter a file to encrypt: ")


# Checks whether file is in directory, makes a copy file with encryption if true

if file_name in os.listdir():
    print("\nFile is in this directory. Encrypting processing...")
    test_file = make_copy(file_name)

    print_border()

    encrypt_file(test_file)
    print()
    print("File name {file} has been encrypted in a new file called {file}.crypt.\n".format(file = file_name)) 
    print_border()
    print("Your original file has been preserved. Goodbye.") 

else: 
    print_border()
    print("File not in directory. Exiting Program..." )


